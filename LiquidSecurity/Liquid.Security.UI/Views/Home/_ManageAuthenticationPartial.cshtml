@using Liquid.Security.UI.Models
@using Microsoft.Owin.Security
@using System.Linq;
@model IndexViewModel

<div class="product-info-wrapper">
    <div class="col">
        <div class="product-info">
            <div class="product-info-heading">Manage authentication</div>
            <div class="product-info-content">
                <p>
                    If you would like to add and/or remove any social media authentication
                    permissions, you are welcome to do so.
                </p>
                <ul class="links">
                    @{
                        <li>
                            Password
                            @if (Model.HasPassword)
                            {
                                using (Html.BeginForm("ChangePassword", "Manage"))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="submit" value="Change" />
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("SetPassword", "Manage"))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="submit" value="Create" />
                                }
                            }
                        </li>

                        var context = Context.GetOwinContext();
                            if (context != null && context.Authentication != null)
                            {
                                var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
                                foreach (AuthenticationDescription p in loginProviders)
                                {
                                <li>
                                    @p.AuthenticationType<br />
                                    @{
                                        var login = Model.Logins.FirstOrDefault(x => x.LoginProvider == p.AuthenticationType);
                                        if (login != null)
                                        {
                                            using (Html.BeginForm("RemoveLogin", "Manage"))
                                            {
                                                @Html.AntiForgeryToken()
                                                <div>
                                                    @Html.Hidden("loginProvider", login.LoginProvider)
                                                    @Html.Hidden("providerKey", login.ProviderKey)
                                                    <input type="submit" class="btn btn-default" value="Remove" title="Remove this @p.AuthenticationType login from your account" />
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            using (Html.BeginForm("LinkLogin", "Manage"))
                                            {
                                                @Html.AntiForgeryToken()
                                                <div id="socialLoginList">
                                                    @Html.Hidden("provider", p.AuthenticationType)
                                                    <input type="submit" class="btn btn-default" value="Add" title="Log in using your @p.AuthenticationType login from your account" />
                                                </div>
                                            }
                                        }
                                    }
                                </li>
                            }
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
